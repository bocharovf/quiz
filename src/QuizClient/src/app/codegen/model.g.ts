/*
	This code was generated by a tool.
    Changes to this file will be lost if the code is regenerated.
*/


 
 
 

	export const enum QuestionType {
		Unknown = 0,
		SingleRight = 1
	}
	export const enum QuizFlowCommandType {
		Unknown = 0,
		QuizProceed = 1,
		QuizFinish = 2
	}
	export const enum SignInErrorCode {
		Unknown = 0,
		IsLockedOut = 1,
		IsNotAllowed = 2,
		RequiresTwoFactor = 3,
		InvalidCredentials = 4
	}



	export class Answer {
		id: number;
		isCorrect: boolean;
		templateId: number;
	}
	export class AnswerTemplate {
		id: number;
		isCorrect: boolean;
		order: number;
		text: string;
	}
	export class ApplicationRole {
	}
	export class AuthenticationStatusContract {
		isSignedIn: boolean;
		user: User;
	}
	export class ClientExceptionContract {
		clientPlatform: string;
		correlationId: string;
		errorCode: string;
		message: string;
		stackTrace: string;
	}
	export class ExceptionContract {
		correlationId: string;
		errorCode: string;
		extension: any;
		message: string;
	}
	export interface IException {
		errorCode: string;
		extension: any;
		message: string;
	}
	export interface IUserOwnedResource {
		createdUserId: number;
	}
	export class LocalizableErrorContract {
		code: string;
		message: string;
	}
	export class LoginContract {
		login: string;
		password: string;
		remember: boolean;
	}
	export class OperationResultContract {
		errors: LocalizableErrorContract[];
		isSuccessful: boolean;
	}
	export class Question {
		answers: Answer[];
		dateEnd: Date;
		dateStart: Date;
		id: number;
		isAnswered: boolean;
		order: number;
		quiz: Quiz;
		templateId: number;
	}
	export class QuestionTemplate {
		answers: AnswerTemplate[];
		id: number;
		questionType: QuestionType;
		text: string;
	}
	export class Quiz {
		createdUserId: number;
		currentQuestion: Question;
		dateEnd: Date;
		dateStart: Date;
		id: number;
		isCompleted: boolean;
		questions: Question[];
		templateId: number;
	}
	export class QuizFlowCommandContract {
		commandType: QuizFlowCommandType;
	}
	export class QuizFlowCommandFinishContract extends QuizFlowCommandContract {
		commandType: QuizFlowCommandType;
	}
	export class QuizFlowCommandProceedContract extends QuizFlowCommandContract {
		commandType: QuizFlowCommandType;
		questionId: number;
		quizId: number;
		template: QuestionTemplate;
	}
	export class QuizQuestionTemplate {
		enabled: boolean;
		order: number;
		questionTemplate: QuestionTemplate;
		questionTemplateId: number;
		quizTemplate: QuizTemplate;
		quizTemplateId: number;
	}
	export class QuizTemplate {
		createdUserId: number;
		description: string;
		id: number;
		title: string;
	}
	export class QuizTemplateDetailsContract {
		questionsCount: number;
		quizTemplate: QuizTemplate;
	}
	export class RegistrationContract {
		displayName: string;
		email: string;
		password: string;
	}
	export class Role {
		id: number;
		name: string;
	}
	export class Score {
		createdUserId: number;
		id: number;
		quizId: number;
		scoresAmount: number;
	}
	export class User {
		email: string;
		id: number;
		isAdmin: boolean;
		name: string;
		roles: string[];
	}


